//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Controls/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""ActionMap"",
            ""id"": ""57daa782-9967-48ed-b10e-e3a5b823ebe2"",
            ""actions"": [
                {
                    ""name"": ""LeftJoystick"",
                    ""type"": ""Value"",
                    ""id"": ""9b3d98bb-f513-4242-aa94-6f024e484fda"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftShoulder"",
                    ""type"": ""Value"",
                    ""id"": ""5c87bfe5-fc58-492a-8cab-3250d4173e02"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RighTrigger"",
                    ""type"": ""Value"",
                    ""id"": ""0042d3a2-224b-412c-a643-892bc30fbc97"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""d182d8fa-d960-4a6f-897e-d5ca81398cef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EastButton"",
                    ""type"": ""Button"",
                    ""id"": ""e87efe15-cde5-42cd-a111-d6f9afb66bec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SouthButton"",
                    ""type"": ""Button"",
                    ""id"": ""24fe9ec1-54f4-4997-afbf-724c20fb772c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightJoystick"",
                    ""type"": ""Value"",
                    ""id"": ""6b47e37e-edb7-4dab-b061-0a72fbaaf173"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""NorthButton"",
                    ""type"": ""Button"",
                    ""id"": ""62b1c315-927b-4f6b-9117-49ce58a014b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightStickPress"",
                    ""type"": ""Button"",
                    ""id"": ""2f674af5-cc56-4bf9-a370-48a5af081dd5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""LeftJoystick"",
                    ""id"": ""0dc20e5a-c222-4a83-b038-d1540cfcef97"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftJoystick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4c6f7a2c-8c77-402f-ac12-926ae602123c"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""74f29571-3c42-482b-9066-95afb0d3e38c"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""dca7d2e0-8a44-4d46-9e9c-6abbd4d128d4"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b3486912-cfe1-48df-9ec5-fe9a24be7b12"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""66a34846-af1e-43f3-b8db-443fb275c061"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftShoulder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""381c1e69-cef3-49c3-a97c-190c7c4bb23f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RighTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bbc96309-5f76-4a2e-98f4-c6422b4301e4"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b94e168-6aca-40eb-8774-eb97465f5599"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EastButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee3d38e2-220d-4af9-8e4d-e1e5008e1738"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SouthButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""RightJoystick"",
                    ""id"": ""64c0257f-7e34-49dc-a7fc-e68b5203642b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightJoystick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c7daba12-68f8-4fe1-acff-0bc8350b25f6"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c5f3278f-7771-42f4-9c6c-adbbca3ffcc9"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1665fd40-20e1-4ff7-8d3d-6082c98da40f"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1e7d7574-c26f-441d-9fc0-00c3da1e5706"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eea47ba8-1d9a-4fff-84ff-dba0aaef3e34"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NorthButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5092b6f-f8ba-4f04-b904-bd5d2c63c8c8"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStickPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ActionMap
        m_ActionMap = asset.FindActionMap("ActionMap", throwIfNotFound: true);
        m_ActionMap_LeftJoystick = m_ActionMap.FindAction("LeftJoystick", throwIfNotFound: true);
        m_ActionMap_LeftShoulder = m_ActionMap.FindAction("LeftShoulder", throwIfNotFound: true);
        m_ActionMap_RighTrigger = m_ActionMap.FindAction("RighTrigger", throwIfNotFound: true);
        m_ActionMap_LeftTrigger = m_ActionMap.FindAction("LeftTrigger", throwIfNotFound: true);
        m_ActionMap_EastButton = m_ActionMap.FindAction("EastButton", throwIfNotFound: true);
        m_ActionMap_SouthButton = m_ActionMap.FindAction("SouthButton", throwIfNotFound: true);
        m_ActionMap_RightJoystick = m_ActionMap.FindAction("RightJoystick", throwIfNotFound: true);
        m_ActionMap_NorthButton = m_ActionMap.FindAction("NorthButton", throwIfNotFound: true);
        m_ActionMap_RightStickPress = m_ActionMap.FindAction("RightStickPress", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ActionMap
    private readonly InputActionMap m_ActionMap;
    private List<IActionMapActions> m_ActionMapActionsCallbackInterfaces = new List<IActionMapActions>();
    private readonly InputAction m_ActionMap_LeftJoystick;
    private readonly InputAction m_ActionMap_LeftShoulder;
    private readonly InputAction m_ActionMap_RighTrigger;
    private readonly InputAction m_ActionMap_LeftTrigger;
    private readonly InputAction m_ActionMap_EastButton;
    private readonly InputAction m_ActionMap_SouthButton;
    private readonly InputAction m_ActionMap_RightJoystick;
    private readonly InputAction m_ActionMap_NorthButton;
    private readonly InputAction m_ActionMap_RightStickPress;
    public struct ActionMapActions
    {
        private @PlayerControls m_Wrapper;
        public ActionMapActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftJoystick => m_Wrapper.m_ActionMap_LeftJoystick;
        public InputAction @LeftShoulder => m_Wrapper.m_ActionMap_LeftShoulder;
        public InputAction @RighTrigger => m_Wrapper.m_ActionMap_RighTrigger;
        public InputAction @LeftTrigger => m_Wrapper.m_ActionMap_LeftTrigger;
        public InputAction @EastButton => m_Wrapper.m_ActionMap_EastButton;
        public InputAction @SouthButton => m_Wrapper.m_ActionMap_SouthButton;
        public InputAction @RightJoystick => m_Wrapper.m_ActionMap_RightJoystick;
        public InputAction @NorthButton => m_Wrapper.m_ActionMap_NorthButton;
        public InputAction @RightStickPress => m_Wrapper.m_ActionMap_RightStickPress;
        public InputActionMap Get() { return m_Wrapper.m_ActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionMapActions set) { return set.Get(); }
        public void AddCallbacks(IActionMapActions instance)
        {
            if (instance == null || m_Wrapper.m_ActionMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ActionMapActionsCallbackInterfaces.Add(instance);
            @LeftJoystick.started += instance.OnLeftJoystick;
            @LeftJoystick.performed += instance.OnLeftJoystick;
            @LeftJoystick.canceled += instance.OnLeftJoystick;
            @LeftShoulder.started += instance.OnLeftShoulder;
            @LeftShoulder.performed += instance.OnLeftShoulder;
            @LeftShoulder.canceled += instance.OnLeftShoulder;
            @RighTrigger.started += instance.OnRighTrigger;
            @RighTrigger.performed += instance.OnRighTrigger;
            @RighTrigger.canceled += instance.OnRighTrigger;
            @LeftTrigger.started += instance.OnLeftTrigger;
            @LeftTrigger.performed += instance.OnLeftTrigger;
            @LeftTrigger.canceled += instance.OnLeftTrigger;
            @EastButton.started += instance.OnEastButton;
            @EastButton.performed += instance.OnEastButton;
            @EastButton.canceled += instance.OnEastButton;
            @SouthButton.started += instance.OnSouthButton;
            @SouthButton.performed += instance.OnSouthButton;
            @SouthButton.canceled += instance.OnSouthButton;
            @RightJoystick.started += instance.OnRightJoystick;
            @RightJoystick.performed += instance.OnRightJoystick;
            @RightJoystick.canceled += instance.OnRightJoystick;
            @NorthButton.started += instance.OnNorthButton;
            @NorthButton.performed += instance.OnNorthButton;
            @NorthButton.canceled += instance.OnNorthButton;
            @RightStickPress.started += instance.OnRightStickPress;
            @RightStickPress.performed += instance.OnRightStickPress;
            @RightStickPress.canceled += instance.OnRightStickPress;
        }

        private void UnregisterCallbacks(IActionMapActions instance)
        {
            @LeftJoystick.started -= instance.OnLeftJoystick;
            @LeftJoystick.performed -= instance.OnLeftJoystick;
            @LeftJoystick.canceled -= instance.OnLeftJoystick;
            @LeftShoulder.started -= instance.OnLeftShoulder;
            @LeftShoulder.performed -= instance.OnLeftShoulder;
            @LeftShoulder.canceled -= instance.OnLeftShoulder;
            @RighTrigger.started -= instance.OnRighTrigger;
            @RighTrigger.performed -= instance.OnRighTrigger;
            @RighTrigger.canceled -= instance.OnRighTrigger;
            @LeftTrigger.started -= instance.OnLeftTrigger;
            @LeftTrigger.performed -= instance.OnLeftTrigger;
            @LeftTrigger.canceled -= instance.OnLeftTrigger;
            @EastButton.started -= instance.OnEastButton;
            @EastButton.performed -= instance.OnEastButton;
            @EastButton.canceled -= instance.OnEastButton;
            @SouthButton.started -= instance.OnSouthButton;
            @SouthButton.performed -= instance.OnSouthButton;
            @SouthButton.canceled -= instance.OnSouthButton;
            @RightJoystick.started -= instance.OnRightJoystick;
            @RightJoystick.performed -= instance.OnRightJoystick;
            @RightJoystick.canceled -= instance.OnRightJoystick;
            @NorthButton.started -= instance.OnNorthButton;
            @NorthButton.performed -= instance.OnNorthButton;
            @NorthButton.canceled -= instance.OnNorthButton;
            @RightStickPress.started -= instance.OnRightStickPress;
            @RightStickPress.performed -= instance.OnRightStickPress;
            @RightStickPress.canceled -= instance.OnRightStickPress;
        }

        public void RemoveCallbacks(IActionMapActions instance)
        {
            if (m_Wrapper.m_ActionMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IActionMapActions instance)
        {
            foreach (var item in m_Wrapper.m_ActionMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ActionMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ActionMapActions @ActionMap => new ActionMapActions(this);
    public interface IActionMapActions
    {
        void OnLeftJoystick(InputAction.CallbackContext context);
        void OnLeftShoulder(InputAction.CallbackContext context);
        void OnRighTrigger(InputAction.CallbackContext context);
        void OnLeftTrigger(InputAction.CallbackContext context);
        void OnEastButton(InputAction.CallbackContext context);
        void OnSouthButton(InputAction.CallbackContext context);
        void OnRightJoystick(InputAction.CallbackContext context);
        void OnNorthButton(InputAction.CallbackContext context);
        void OnRightStickPress(InputAction.CallbackContext context);
    }
}
